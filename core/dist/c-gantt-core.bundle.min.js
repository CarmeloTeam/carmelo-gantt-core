var carmelo=function(n){var t={};function e(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return n[a].call(r.exports,r,r.exports,e),r.l=!0,r.exports}return e.m=n,e.c=t,e.d=function(n,t,a){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:a})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(e.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)e.d(a,r,function(t){return n[t]}.bind(null,r));return a},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=1)}([function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n(function (global) {\n  'use strict';\n\n  var dateFormat = function () {\n    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    var timezoneClip = /[^-+\\dA-Z]/g; // Regexes and supporting functions are cached through closure\n\n    return function (date, mask, utc, gmt) {\n      // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n      if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n        mask = date;\n        date = undefined;\n      }\n\n      date = date || new Date();\n\n      if (!(date instanceof Date)) {\n        date = new Date(date);\n      }\n\n      if (isNaN(date)) {\n        throw TypeError('Invalid date');\n      }\n\n      mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']); // Allow setting the utc/gmt argument via the mask\n\n      var maskSlice = mask.slice(0, 4);\n\n      if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n        mask = mask.slice(4);\n        utc = true;\n\n        if (maskSlice === 'GMT:') {\n          gmt = true;\n        }\n      }\n\n      var _ = utc ? 'getUTC' : 'get';\n\n      var d = date[_ + 'Date']();\n\n      var D = date[_ + 'Day']();\n\n      var m = date[_ + 'Month']();\n\n      var y = date[_ + 'FullYear']();\n\n      var H = date[_ + 'Hours']();\n\n      var M = date[_ + 'Minutes']();\n\n      var s = date[_ + 'Seconds']();\n\n      var L = date[_ + 'Milliseconds']();\n\n      var o = utc ? 0 : date.getTimezoneOffset();\n      var W = getWeek(date);\n      var N = getDayOfWeek(date);\n      var flags = {\n        d: d,\n        dd: pad(d),\n        ddd: dateFormat.i18n.dayNames[D],\n        dddd: dateFormat.i18n.dayNames[D + 7],\n        m: m + 1,\n        mm: pad(m + 1),\n        mmm: dateFormat.i18n.monthNames[m],\n        mmmm: dateFormat.i18n.monthNames[m + 12],\n        yy: String(y).slice(2),\n        yyyy: y,\n        h: H % 12 || 12,\n        hh: pad(H % 12 || 12),\n        H: H,\n        HH: pad(H),\n        M: M,\n        MM: pad(M),\n        s: s,\n        ss: pad(s),\n        l: pad(L, 3),\n        L: pad(Math.round(L / 10)),\n        t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n        tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n        T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n        TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n        Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n        o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n        S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n        W: W,\n        N: N\n      };\n      return mask.replace(token, function (match) {\n        if (match in flags) {\n          return flags[match];\n        }\n\n        return match.slice(1, match.length - 1);\n      });\n    };\n  }();\n\n  dateFormat.masks = {\n    'default': 'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate': 'm/d/yy',\n    'mediumDate': 'mmm d, yyyy',\n    'longDate': 'mmmm d, yyyy',\n    'fullDate': 'dddd, mmmm d, yyyy',\n    'shortTime': 'h:MM TT',\n    'mediumTime': 'h:MM:ss TT',\n    'longTime': 'h:MM:ss TT Z',\n    'isoDate': 'yyyy-mm-dd',\n    'isoTime': 'HH:MM:ss',\n    'isoDateTime': 'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime': 'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat': 'ddd, dd mmm yyyy HH:MM:ss Z'\n  }; // Internationalization strings\n\n  dateFormat.i18n = {\n    dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    monthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n  };\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n\n    while (val.length < len) {\n      val = '0' + val;\n    }\n\n    return val;\n  }\n  /**\n   * Get the ISO 8601 week number\n   * Based on comments from\n   * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n   *\n   * @param  {Object} `date`\n   * @return {Number}\n   */\n\n\n  function getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate()); // Change date to Thursday same week\n\n    targetThursday.setDate(targetThursday.getDate() - (targetThursday.getDay() + 6) % 7 + 3); // Take January 4th as it is always in week 1 (see ISO 8601)\n\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4); // Change date to Thursday same week\n\n    firstThursday.setDate(firstThursday.getDate() - (firstThursday.getDay() + 6) % 7 + 3); // Check if daylight-saving-time-switch occurred and correct for it\n\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds); // Number of weeks between target Thursday and first Thursday\n\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n  }\n  /**\n   * Get ISO-8601 numeric representation of the day of the week\n   * 1 (for Monday) through 7 (for Sunday)\n   * \n   * @param  {Object} `date`\n   * @return {Number}\n   */\n\n\n  function getDayOfWeek(date) {\n    var dow = date.getDay();\n\n    if (dow === 0) {\n      dow = 7;\n    }\n\n    return dow;\n  }\n  /**\n   * kind-of shortcut\n   * @param  {*} val\n   * @return {String}\n   */\n\n\n  function kindOf(val) {\n    if (val === null) {\n      return 'null';\n    }\n\n    if (val === undefined) {\n      return 'undefined';\n    }\n\n    if (_typeof(val) !== 'object') {\n      return _typeof(val);\n    }\n\n    if (Array.isArray(val)) {\n      return 'array';\n    }\n\n    return {}.toString.call(val).slice(8, -1).toLowerCase();\n  }\n\n  ;\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return dateFormat;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this);\n\n//# sourceURL=webpack://carmelo/./node_modules/dateformat/lib/dateformat.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C_Gantt", function() { return C_Gantt; });\n/* harmony import */ var classlist_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var classlist_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classlist_polyfill__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var element_remove__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var element_remove__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(element_remove__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var array_findindex_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);\n/* harmony import */ var array_findindex_polyfill__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(array_findindex_polyfill__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var dateformat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);\n/* harmony import */ var dateformat__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dateformat__WEBPACK_IMPORTED_MODULE_3__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n // import style from "./svg.scss";\n// import style from "./flex.scss";\n\nvar C_Gantt =\n/*#__PURE__*/\nfunction () {\n  function C_Gantt(preSetup) {\n    _classCallCheck(this, C_Gantt);\n\n    _defineProperty(this, "svg_spec", "http://www.w3.org/2000/svg");\n\n    this.tasks = preSetup.items;\n    this.dayOffs = preSetup.dayOffs || [0];\n    this.statuses = preSetup.statuses;\n    this.CELL_HEIGHT = preSetup.cellHeight || 30;\n    this.CELL_WIDTH = preSetup.cellWidth || 90;\n    this.HEADER_COLUMN_WIDTH = preSetup.headerWidth || 400;\n    this.HEADER_ROW_HEIGHT = preSetup.headerHeight || 50;\n    this.layout = preSetup.layout || "svg";\n    this.container = preSetup.container || document.body;\n    this.selectTask = preSetup.selectTask;\n    this.common_class = preSetup.common_class || "";\n    this.right_side_class = preSetup.right_side_class || "";\n    this.left_side_class = preSetup.left_side_class || "";\n    this.row_class = preSetup.row_class || "";\n    this.cell_class = preSetup.cell_class || "";\n    this.date_format = preSetup.date_format || "mm/dd/yyyy";\n  }\n\n  _createClass(C_Gantt, [{\n    key: "draw",\n\n    /**\r\n     * Draw the Gantt chart\r\n     */\n    value: function draw() {\n      this.dates = this.getDates(this.tasks);\n      this.n_days = this.dates.length;\n      this.firstDayOffs = this.getFirstDayOffs();\n      this.n_tasks = this.tasks.length;\n\n      if (this.layout == "svg") {\n        this.drawSvgGantt();\n      } else if (this.layout == "flex") {\n        this.drawFlexGantt();\n      }\n\n      this.container.appendChild(this.main);\n    }\n    /**\r\n     * Draw the Gantt chart in SVG layout\r\n     */\n\n  }, {\n    key: "drawSvgGantt",\n    value: function drawSvgGantt() {\n      this.createSVGContainer();\n      this.drawTopLeftCorner();\n      this.drawHeaderRow();\n      this.drawHeaderColumn();\n      this.drawCells();\n      this.addColumnLabels();\n      this.addRowLabels();\n      this.drawTasks();\n      this.addSelectTaskHandler();\n    }\n    /**\r\n     * Draw the Gantt chart in Flex Layout\r\n     */\n\n  }, {\n    key: "drawFlexGantt",\n    value: function drawFlexGantt() {\n      this.createFlexContainer();\n      this.createThead();\n      this.createTbody();\n    }\n    /**\r\n     * Create SVG container\r\n     */\n\n  }, {\n    key: "createSVGContainer",\n    value: function createSVGContainer() {\n      this.main = document.createElementNS(this.svg_spec, "svg");\n      this.main.setAttribute("viewBox", "0 0 ".concat(this.CELL_WIDTH * this.n_days + this.HEADER_COLUMN_WIDTH, " ").concat(this.CELL_HEIGHT * this.n_tasks + this.HEADER_ROW_HEIGHT));\n      this.main.setAttribute("preserveAsvg_spectRatio", "none");\n      this.main.classList.add("c-gantt");\n    }\n    /**\r\n     * Draw top-left empty cell\r\n     */\n\n  }, {\n    key: "drawTopLeftCorner",\n    value: function drawTopLeftCorner() {\n      var corner = document.createElementNS(this.svg_spec, "rect");\n      corner.setAttribute("width", "".concat(this.HEADER_COLUMN_WIDTH));\n      corner.setAttribute("height", "".concat(this.HEADER_ROW_HEIGHT));\n      corner.classList.add("c-gantt__top-left");\n      this.main.appendChild(corner);\n    }\n    /**\r\n     * Draw header column\r\n     */\n\n  }, {\n    key: "drawHeaderColumn",\n    value: function drawHeaderColumn() {\n      for (var i = 0; i < this.n_tasks; i++) {\n        var header_cell = document.createElementNS(this.svg_spec, "rect");\n        header_cell.setAttribute("width", "".concat(this.HEADER_COLUMN_WIDTH));\n        header_cell.setAttribute("height", "".concat(this.CELL_HEIGHT));\n        header_cell.setAttribute("x", "0");\n        header_cell.setAttribute("y", "".concat(this.HEADER_ROW_HEIGHT + this.CELL_HEIGHT * i));\n        header_cell.classList.add("c-gantt__task-header");\n        this.main.appendChild(header_cell);\n      }\n    }\n    /**\r\n     * Draw header row\r\n     */\n\n  }, {\n    key: "drawHeaderRow",\n    value: function drawHeaderRow() {\n      for (var i = 0; i < this.n_days; i++) {\n        var header_cell = document.createElementNS(this.svg_spec, "rect");\n        header_cell.setAttribute("width", "".concat(this.CELL_WIDTH));\n        header_cell.setAttribute("height", "".concat(this.HEADER_ROW_HEIGHT));\n        header_cell.setAttribute("x", "".concat(this.HEADER_COLUMN_WIDTH + this.CELL_WIDTH * i));\n        header_cell.setAttribute("y", "0");\n        header_cell.classList.add("c-gantt__date-header");\n        this.main.appendChild(header_cell);\n      }\n    }\n    /**\r\n     * Draw cells of the chart\r\n     */\n\n  }, {\n    key: "drawCells",\n    value: function drawCells() {\n      for (var row = 0; row < this.n_tasks; row++) {\n        for (var col = 0; col < this.n_days; col++) {\n          var cell = document.createElementNS(this.svg_spec, "rect");\n          cell.col = col;\n          cell.row = row;\n          cell.setAttribute("width", "".concat(this.CELL_WIDTH));\n          cell.setAttribute("height", "".concat(this.CELL_HEIGHT));\n          cell.setAttribute("x", "".concat(this.HEADER_COLUMN_WIDTH + this.CELL_WIDTH * col));\n          cell.setAttribute("y", "".concat(this.HEADER_ROW_HEIGHT + this.CELL_HEIGHT * row));\n          cell.classList.add("c-gantt__cell");\n          cell.classList.add(this.cell_class); // Check day-offs\n\n          for (var i = 0; i < this.dayOffs.length; i++) {\n            if (col % 7 == this.firstDayOffs[i]) {\n              cell.classList.add("c-gantt__cell__day-off");\n            }\n          }\n\n          this.main.appendChild(cell);\n        }\n      }\n    }\n    /**\r\n     * Add labels to the columns\r\n     */\n\n  }, {\n    key: "addColumnLabels",\n    value: function addColumnLabels() {\n      for (var i = 0; i < this.n_days; i++) {\n        var label = document.createElementNS(this.svg_spec, "text");\n        var cur_date = this.dates[i];\n        var text = document.createTextNode(dateformat__WEBPACK_IMPORTED_MODULE_3___default()(cur_date, this.date_format));\n        label.appendChild(text);\n        label.setAttribute("x", "".concat(this.HEADER_COLUMN_WIDTH + this.CELL_WIDTH * 0.5 + this.CELL_WIDTH * i));\n        label.setAttribute("y", "".concat(this.HEADER_ROW_HEIGHT * 0.6));\n        label.setAttribute("text-anchor", "middle");\n        label.classList.add("c-gantt__dates");\n        this.main.appendChild(label);\n      }\n    }\n    /**\r\n     * Add labels to the rows\r\n     */\n\n  }, {\n    key: "addRowLabels",\n    value: function addRowLabels() {\n      for (var i = 0; i < this.n_tasks; i++) {\n        var label = document.createElementNS(this.svg_spec, "text");\n        var text = document.createTextNode(this.tasks[i].name);\n        label.appendChild(text);\n        label.setAttribute("x", "".concat(this.HEADER_COLUMN_WIDTH * 0.5));\n        label.setAttribute("y", "".concat(this.HEADER_ROW_HEIGHT + this.CELL_HEIGHT * 0.6 + this.CELL_HEIGHT * i));\n        label.setAttribute("text-anchor", "middle");\n        label.classList.add("c-gantt__tasks");\n        this.main.appendChild(label);\n      }\n    }\n    /**\r\n     * Draw tasks with different status\r\n     */\n\n  }, {\n    key: "drawTasks",\n    value: function drawTasks() {\n      var min_date = this.getMinimumDate(this.tasks);\n\n      for (var i = 0; i < this.n_tasks; i++) {\n        var task = this.tasks[i];\n        var start_date = new Date(task.start_date);\n        var end_date = new Date(task.end_date);\n        var duration = (end_date - start_date) / 1000 / 60 / 60 / 24 + 1;\n        var column = (start_date - min_date) / 1000 / 60 / 60 / 24;\n        var row = i;\n        this.newTask(column, row, duration, task.status);\n      }\n    }\n    /**\r\n     * Create new task\r\n     * @param {number} column The number of a column where the task starts\r\n     * @param {number} row The number of a row of the task\r\n     * @param {number} duration The number of days the task lasts for\r\n     * @param {number} status Status of the task\r\n     */\n\n  }, {\n    key: "newTask",\n    value: function newTask(column, row, duration, status) {\n      var y = row * this.CELL_HEIGHT + this.HEADER_ROW_HEIGHT;\n      var x = column * this.CELL_WIDTH + this.HEADER_COLUMN_WIDTH;\n      var i = 0;\n\n      while (i < duration) {\n        if (this.firstDayOffs.indexOf((column + i) % 7) == -1) {\n          var new_task = document.createElementNS(this.svg_spec, "rect");\n          new_task.col = column + i;\n          new_task.row = row;\n          new_task.setAttribute("x", "".concat(x));\n          new_task.setAttribute("y", "".concat(y));\n          new_task.setAttribute("width", "".concat(this.CELL_WIDTH));\n          new_task.setAttribute("height", "".concat(this.CELL_HEIGHT));\n          new_task.classList.add("c-gantt__task");\n          new_task.classList.add("c-gantt__task__".concat(this.statuses[status]));\n          this.main.appendChild(new_task);\n        }\n\n        x += this.CELL_WIDTH;\n        i++;\n      }\n    }\n    /**\r\n     * \r\n     * @param {function} func Add click handler on the chart \r\n     */\n\n  }, {\n    key: "addSelectTaskHandler",\n    value: function addSelectTaskHandler(func) {\n      var _this = this;\n\n      this.main.addEventListener("click", function (event) {\n        return _this.selectTask(event, _this);\n      });\n    }\n    /**\r\n     * \r\n     * @param {object} task Update the task or add new task if it doesn\'t exist\r\n     */\n\n  }, {\n    key: "updateTask",\n    value: function updateTask(task) {\n      var cur_task_index = this.tasks.findIndex(function (elem, i) {\n        return elem.id === task.id;\n      });\n\n      if (cur_task_index === -1) {\n        this.tasks.push(task);\n      } else {\n        this.tasks[cur_task_index] = task;\n      }\n    }\n    /**\r\n     * Create flex container\r\n     */\n\n  }, {\n    key: "createFlexContainer",\n    value: function createFlexContainer() {\n      this.main = document.createElement("div");\n      this.main.classList.add("c-gantt");\n      this.main.classList.add(this.common_class);\n    }\n    /**\r\n     * Create the left part of the chart\r\n     */\n\n  }, {\n    key: "createThead",\n    value: function createThead() {\n      var thead = document.createElement("div");\n      thead.classList.add("c-gantt__thead");\n      thead.classList.add(this.left_side_class);\n\n      for (var i = 0; i < this.n_tasks + 1; i++) {\n        var row_header = document.createElement("div");\n        row_header.classList.add("c-gantt__row-header");\n        if (!i) row_header.classList.add("c-gantt__top-left");\n        var text = i ? this.tasks[i - 1].name : "";\n        var text_node = document.createTextNode(text);\n        row_header.appendChild(text_node);\n        thead.appendChild(row_header);\n      }\n\n      this.main.appendChild(thead);\n    }\n    /**\r\n     * create the right part of the chart\r\n     */\n\n  }, {\n    key: "createTbody",\n    value: function createTbody() {\n      var tbody = document.createElement("div");\n      tbody.classList.add("c-gantt__tbody");\n      tbody.classList.add(this.right_side_class);\n\n      for (var i = 0; i < this.n_tasks + 1; i++) {\n        var row = document.createElement("div");\n        row.classList.add("c-gantt__row");\n        row.classList.add(this.row_class);\n        var min_date = void 0;\n        var task = void 0;\n        var start_date = void 0;\n        var end_date = void 0;\n        var duration = void 0;\n        var column = void 0;\n\n        if (!i) {\n          row.classList.add("c-gantt__headers-row");\n        } else {\n          min_date = this.getMinimumDate(this.tasks);\n          task = this.tasks[i - 1];\n          start_date = new Date(task.start_date);\n          end_date = new Date(task.end_date);\n          duration = (end_date - start_date) / 1000 / 60 / 60 / 24 + 1;\n          column = (start_date - min_date) / 1000 / 60 / 60 / 24;\n        }\n\n        for (var j = 0; j < this.n_days; j++) {\n          var cell = document.createElement("div");\n          cell.classList.add("c-gantt__cell");\n          cell.classList.add(this.cell_class);\n\n          if (!i) {\n            cell.classList.add("c-gantt__column-header");\n            var text = dateformat__WEBPACK_IMPORTED_MODULE_3___default()(this.dates[j], this.date_format);\n            var text_node = document.createTextNode(text);\n            cell.appendChild(text_node);\n          } else if (this.firstDayOffs.indexOf(j % 7) != -1) {\n            cell.classList.add("c-gantt__dayOff");\n          } else if (j >= column && j < column + duration) {\n            cell.classList.add("c-gantt__task");\n            cell.classList.add("c-gantt__task__" + this.statuses[task.status]);\n          }\n\n          row.appendChild(cell);\n        }\n\n        tbody.appendChild(row);\n      }\n\n      this.main.appendChild(tbody);\n    }\n    /**\r\n     * Get list of days of the tasks\r\n     */\n\n  }, {\n    key: "getDates",\n    value: function getDates() {\n      var dates = [];\n      var cur_date = this.getMinimumDate();\n      var max_date = this.getMaximumDate();\n\n      while (cur_date <= max_date) {\n        dates.push(cur_date);\n        cur_date = this.getNextDay(cur_date);\n      }\n\n      return dates;\n    }\n    /**\r\n     * Get the first day of the tasks\r\n     */\n\n  }, {\n    key: "getMaximumDate",\n    value: function getMaximumDate() {\n      var maximum_date = new Date(this.tasks[0].end_date);\n\n      for (var i = 1; i < this.tasks.length; i++) {\n        var cur_date = new Date(this.tasks[i].end_date);\n\n        if (cur_date > maximum_date) {\n          maximum_date = cur_date;\n        }\n      }\n\n      return maximum_date;\n    }\n    /**\r\n     * Get the last day of the tasks\r\n     */\n\n  }, {\n    key: "getMinimumDate",\n    value: function getMinimumDate() {\n      var minimum_date = new Date(this.tasks[0].start_date);\n\n      for (var i = 1; i < this.tasks.length; i++) {\n        var cur_date = new Date(this.tasks[i].start_date);\n\n        if (cur_date < minimum_date) {\n          minimum_date = cur_date;\n        }\n      }\n\n      return minimum_date;\n    }\n    /**\r\n     * Get the day-offs of the first week\r\n     */\n\n  }, {\n    key: "getFirstDayOffs",\n    value: function getFirstDayOffs() {\n      var firstDayOffs = [];\n\n      for (var j = 0; j < this.dayOffs.length; j++) {\n        if (!this.dates.length) break;\n        var cur_date = this.dates[0];\n        var i = 0;\n\n        while (cur_date.getDay() != this.dayOffs[j]) {\n          cur_date = this.getNextDay(cur_date);\n          i++;\n        }\n\n        firstDayOffs.push(i);\n      }\n\n      return firstDayOffs;\n    }\n    /**\r\n     * Get the next day of a given day\r\n     * @param {date} day A day to get the next day\r\n     */\n\n  }, {\n    key: "getNextDay",\n    value: function getNextDay(day) {\n      var next_day = new Date(day.getFullYear(), day.getMonth(), day.getDate() + 1);\n      return next_day;\n    }\n  }]);\n\n  return C_Gantt;\n}();\n\n//# sourceURL=webpack://carmelo/./index.js?')},function(module,exports){eval('/*\n * classList.js: Cross-browser full element.classList implementation.\n * 1.1.20170427\n *\n * By Eli Grey, http://eligrey.com\n * License: Dedicated to the public domain.\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\nif ("document" in window.self) {\n  // Full polyfill for browsers with no classList support\n  // Including IE < Edge missing SVGElement.classList\n  if (!("classList" in document.createElement("_")) || document.createElementNS && !("classList" in document.createElementNS("http://www.w3.org/2000/svg", "g"))) {\n    (function (view) {\n      "use strict";\n\n      if (!(\'Element\' in view)) return;\n\n      var classListProp = "classList",\n          protoProp = "prototype",\n          elemCtrProto = view.Element[protoProp],\n          objCtr = Object,\n          strTrim = String[protoProp].trim || function () {\n        return this.replace(/^\\s+|\\s+$/g, "");\n      },\n          arrIndexOf = Array[protoProp].indexOf || function (item) {\n        var i = 0,\n            len = this.length;\n\n        for (; i < len; i++) {\n          if (i in this && this[i] === item) {\n            return i;\n          }\n        }\n\n        return -1;\n      } // Vendors: please allow content code to instantiate DOMExceptions\n      ,\n          DOMEx = function DOMEx(type, message) {\n        this.name = type;\n        this.code = DOMException[type];\n        this.message = message;\n      },\n          checkTokenAndGetIndex = function checkTokenAndGetIndex(classList, token) {\n        if (token === "") {\n          throw new DOMEx("SYNTAX_ERR", "An invalid or illegal string was specified");\n        }\n\n        if (/\\s/.test(token)) {\n          throw new DOMEx("INVALID_CHARACTER_ERR", "String contains an invalid character");\n        }\n\n        return arrIndexOf.call(classList, token);\n      },\n          ClassList = function ClassList(elem) {\n        var trimmedClasses = strTrim.call(elem.getAttribute("class") || ""),\n            classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : [],\n            i = 0,\n            len = classes.length;\n\n        for (; i < len; i++) {\n          this.push(classes[i]);\n        }\n\n        this._updateClassName = function () {\n          elem.setAttribute("class", this.toString());\n        };\n      },\n          classListProto = ClassList[protoProp] = [],\n          classListGetter = function classListGetter() {\n        return new ClassList(this);\n      }; // Most DOMException implementations don\'t allow calling DOMException\'s toString()\n      // on non-DOMExceptions. Error\'s toString() is sufficient here.\n\n\n      DOMEx[protoProp] = Error[protoProp];\n\n      classListProto.item = function (i) {\n        return this[i] || null;\n      };\n\n      classListProto.contains = function (token) {\n        token += "";\n        return checkTokenAndGetIndex(this, token) !== -1;\n      };\n\n      classListProto.add = function () {\n        var tokens = arguments,\n            i = 0,\n            l = tokens.length,\n            token,\n            updated = false;\n\n        do {\n          token = tokens[i] + "";\n\n          if (checkTokenAndGetIndex(this, token) === -1) {\n            this.push(token);\n            updated = true;\n          }\n        } while (++i < l);\n\n        if (updated) {\n          this._updateClassName();\n        }\n      };\n\n      classListProto.remove = function () {\n        var tokens = arguments,\n            i = 0,\n            l = tokens.length,\n            token,\n            updated = false,\n            index;\n\n        do {\n          token = tokens[i] + "";\n          index = checkTokenAndGetIndex(this, token);\n\n          while (index !== -1) {\n            this.splice(index, 1);\n            updated = true;\n            index = checkTokenAndGetIndex(this, token);\n          }\n        } while (++i < l);\n\n        if (updated) {\n          this._updateClassName();\n        }\n      };\n\n      classListProto.toggle = function (token, force) {\n        token += "";\n        var result = this.contains(token),\n            method = result ? force !== true && "remove" : force !== false && "add";\n\n        if (method) {\n          this[method](token);\n        }\n\n        if (force === true || force === false) {\n          return force;\n        } else {\n          return !result;\n        }\n      };\n\n      classListProto.toString = function () {\n        return this.join(" ");\n      };\n\n      if (objCtr.defineProperty) {\n        var classListPropDesc = {\n          get: classListGetter,\n          enumerable: true,\n          configurable: true\n        };\n\n        try {\n          objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n        } catch (ex) {\n          // IE 8 doesn\'t support enumerable:true\n          // adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36\n          // modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected\n          if (ex.number === undefined || ex.number === -0x7FF5EC54) {\n            classListPropDesc.enumerable = false;\n            objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n          }\n        }\n      } else if (objCtr[protoProp].__defineGetter__) {\n        elemCtrProto.__defineGetter__(classListProp, classListGetter);\n      }\n    })(window.self);\n  } // There is full or partial native classList support, so just check if we need\n  // to normalize the add/remove and toggle APIs.\n\n\n  (function () {\n    "use strict";\n\n    var testElement = document.createElement("_");\n    testElement.classList.add("c1", "c2"); // Polyfill for IE 10/11 and Firefox <26, where classList.add and\n    // classList.remove exist but support only one argument at a time.\n\n    if (!testElement.classList.contains("c2")) {\n      var createMethod = function createMethod(method) {\n        var original = DOMTokenList.prototype[method];\n\n        DOMTokenList.prototype[method] = function (token) {\n          var i,\n              len = arguments.length;\n\n          for (i = 0; i < len; i++) {\n            token = arguments[i];\n            original.call(this, token);\n          }\n        };\n      };\n\n      createMethod(\'add\');\n      createMethod(\'remove\');\n    }\n\n    testElement.classList.toggle("c3", false); // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n    // support the second argument.\n\n    if (testElement.classList.contains("c3")) {\n      var _toggle = DOMTokenList.prototype.toggle;\n\n      DOMTokenList.prototype.toggle = function (token, force) {\n        if (1 in arguments && !this.contains(token) === !force) {\n          return force;\n        } else {\n          return _toggle.call(this, token);\n        }\n      };\n    }\n\n    testElement = null;\n  })();\n}\n\n//# sourceURL=webpack://carmelo/./node_modules/classlist-polyfill/src/index.js?')},function(module,exports){eval("(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('remove')) {\n      return;\n    }\n\n    Object.defineProperty(item, 'remove', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove() {\n        this.parentNode && this.parentNode.removeChild(this);\n      }\n    });\n  });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype].filter(Boolean));\n\n//# sourceURL=webpack://carmelo/./node_modules/element-remove/index.js?")},function(module,exports){eval("/**\n * Array.prototype.findIndex\n *\n * @ref https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n */\nmodule.exports = function () {\n  if (!Array.prototype.findIndex) {\n    Array.prototype.findIndex = function (predicate) {\n      if (this === null) {\n        throw new TypeError('Array.prototype.findIndex called on null or undefined');\n      }\n\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n\n      var list = Object(this);\n      var length = list.length >>> 0;\n      var thisArg = arguments[1];\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n}();\n\n//# sourceURL=webpack://carmelo/./node_modules/array-findindex-polyfill/index.js?")}]);